{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["ContactForm","nameInputId","uuid","numberInputId","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","obj","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactList","contacts","map","el","App","formSubmitHandler","find","alert","prevState","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"iPAKaA,EAAb,4MACIC,YAAcC,cADlB,EAEIC,cAAgBD,cAFpB,EAGIE,MAAQ,CACJC,KAAM,GACNC,OAAQ,IALhB,EAQAC,kBAAoB,SAAAC,GAChB,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,KAV5B,EAcIE,aAAe,SAAAC,GACXA,EAAEC,iBAEF,IAAMC,EAAM,CACRV,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGvB,EAAKU,MAAMC,SAASF,GACtB,EAAKG,SAvBX,EA4BIA,MAAQ,WACJ,EAAKP,SAAS,CACVN,KAAM,GACNC,OAAQ,MA/BpB,4CAmCI,WACI,MAAyBa,KAAKf,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNL,EAAgEkB,KAAhElB,YAAaE,EAAmDgB,KAAnDhB,cAAeI,EAAoCY,KAApCZ,kBAAmBK,EAAiBO,KAAjBP,aACvD,OACI,uBAAMK,SAAUL,EAAhB,UACI,2CACN,wBAAOQ,QAASnB,EAAhB,iBACF,uBACNoB,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACgBC,UAAQ,EACRd,MAAOL,EACPoB,SAAUlB,EACVmB,GAAIzB,OAIlB,uBAAOmB,QAASjB,EAAhB,oBACA,uBACRkB,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,giBACYC,UAAQ,EACRd,MAAOJ,EACHmB,SAAUlB,EACVmB,GAAIvB,IAGlB,wDAlEV,GAAiCwB,aCDXC,E,4JAElB,WACA,OACE,6BACGT,KAAKH,MAAMa,SAASC,KAAI,SAACC,GAAD,OACvB,+BACGA,EAAG1B,KADN,KACc0B,EAAGzB,SADRyB,EAAGL,a,GANoBC,aCGpCK,E,4MACJ5B,MAAQ,CACNyB,SAAU,CACR,CAAEH,GAAI,OAAQrB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoB,GAAI,OAAQrB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEoB,GAAI,OAAQrB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoB,GAAI,OAAQrB,KAAM,iBAAkBC,OAAQ,e,EAMlD2B,kBAAoB,SAAClB,GACd,EAAKX,MAAMyB,SAASK,MAAK,SAACH,GAAD,OAAQA,EAAG1B,OAASU,EAAIV,QAMpD8B,MAAM,GAAD,OAAIpB,EAAIV,KAAR,4BALL,EAAKM,UAAS,SAACyB,GAAD,MAAgB,CAE5BP,SAAS,GAAD,mBAAMO,EAAUP,UAAhB,CAA0B,CAAEd,MAAKW,GAAIxB,sB,4CAUnD,WAEE,OACE,gCAEE,cAAC,EAAD,CACEe,SAAUE,KAAKc,oBAEjB,0CAEA,cAAC,EAAD,W,GApCUN,aA+CHK,IClDfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASE,cAAc,Y","file":"static/js/main.1da3cfd8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n\r\nexport class ContactForm extends Component{\r\n    nameInputId = uuid();\r\n    numberInputId = uuid();\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n \r\nhandleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value, });\r\n    \r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const obj = {\r\n            name: this.state.name,\r\n            number: this.state.number\r\n        };\r\n\r\n        this.props.onSubmit(obj);\r\n      this.reset();\r\n        \r\n    };\r\n\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    };\r\n       \r\n    render() {\r\n        const { name, number } = this.state;\r\n        const { nameInputId, numberInputId, handleInputChange, handleSubmit } = this;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Phonebook</h1>\r\n          <label htmlFor={nameInputId}>Name\r\n        <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        id={nameInputId}\r\n                        \r\n          />\r\n          </label>\r\n          <label htmlFor={numberInputId}>Number</label>\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                        onChange={handleInputChange}\r\n                        id={numberInputId}\r\n/>\r\n          \r\n          <button >Add contact</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n}","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport  default class ContactList extends Component{\r\n   \r\n    render() {\r\n    return (\r\n      <ul>\r\n        {this.props.contacts.map((el) => (\r\n          <li key={el.id}>\r\n            {el.name}: {el.number}\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n     \r\n}\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    \r\n}\r\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport ContactList  from './components/ContactList/ContactList';\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ]\n    \n  }\n  \n  \n  formSubmitHandler = (obj) => {\n    if (!this.state.contacts.find((el) => el.name === obj.name)) {\n      this.setState((prevState) => ({\n    \n        contacts: [...prevState.contacts, { obj, id: uuid() }],\n      }));\n    } else {\n      alert(`${obj.name} is already in contacts`);\n    }\n  };\n\n\n\n\n  render() {\n    \n    return (\n      <div>\n        \n        <ContactForm\n          onSubmit={this.formSubmitHandler}\n        />\n        <h2>Contacts</h2>\n        {/* <Filter /> */}\n        <ContactList />\n      </div>\n    );\n\n  }\n}\n\n    \n  \n\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n"],"sourceRoot":""}